{"ast":null,"code":"import { signal, computed, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { Subject, takeUntil, combineLatest } from 'rxjs';\nimport { TestResultService } from '../../services/test-result.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nfunction TestResultEntryComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.cnrColor)(\"color\", (tmp_3_0 = ctx_r1.sampleInfo()) == null ? null : tmp_3_0.fColor);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", (tmp_4_0 = ctx_r1.sampleInfo()) == null ? null : tmp_4_0.cnrText, \" \");\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-tan-entry\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"equipment\", ctx_r1.equipment());\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-viscosity-entry\", 10);\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"equipment\", ctx_r1.equipment())(\"lubeType\", ((tmp_5_0 = ctx_r1.sampleInfo()) == null ? null : tmp_5_0.lubeType) || \"\");\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-viscosity-entry\", 10);\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"equipment\", ctx_r1.equipment())(\"lubeType\", ((tmp_5_0 = ctx_r1.sampleInfo()) == null ? null : tmp_5_0.lubeType) || \"\");\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-ftir-entry\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-particle-analysis-entry\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"particleTypes\", ctx_r1.particleTypes())(\"testId\", ctx_r1.testInfo().id);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-particle-analysis-entry\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"particleTypes\", ctx_r1.particleTypes())(\"testId\", ctx_r1.testInfo().id);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-particle-analysis-entry\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"particleTypes\", ctx_r1.particleTypes())(\"testId\", ctx_r1.testInfo().id);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-particle-analysis-entry\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"particleTypes\", ctx_r1.particleTypes())(\"testId\", ctx_r1.testInfo().id);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Case_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-generic-entry\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm)(\"equipment\", ctx_r1.equipment());\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, TestResultEntryComponent_Conditional_2_Conditional_20_Case_0_Template, 1, 2, \"app-tan-entry\", 9)(1, TestResultEntryComponent_Conditional_2_Conditional_20_Case_1_Template, 1, 3, \"app-viscosity-entry\", 10)(2, TestResultEntryComponent_Conditional_2_Conditional_20_Case_2_Template, 1, 3, \"app-viscosity-entry\", 10)(3, TestResultEntryComponent_Conditional_2_Conditional_20_Case_3_Template, 1, 1, \"app-ftir-entry\", 11)(4, TestResultEntryComponent_Conditional_2_Conditional_20_Case_4_Template, 1, 3, \"app-particle-analysis-entry\", 12)(5, TestResultEntryComponent_Conditional_2_Conditional_20_Case_5_Template, 1, 3, \"app-particle-analysis-entry\", 12)(6, TestResultEntryComponent_Conditional_2_Conditional_20_Case_6_Template, 1, 3, \"app-particle-analysis-entry\", 12)(7, TestResultEntryComponent_Conditional_2_Conditional_20_Case_7_Template, 1, 3, \"app-particle-analysis-entry\", 12)(8, TestResultEntryComponent_Conditional_2_Conditional_20_Case_8_Template, 1, 2, \"app-generic-entry\", 9);\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵconditional((tmp_2_0 = ctx_r1.testInfo().id) === 10 ? 0 : tmp_2_0 === 50 ? 1 : tmp_2_0 === 60 ? 2 : tmp_2_0 === 70 ? 3 : tmp_2_0 === 120 ? 4 : tmp_2_0 === 180 ? 5 : tmp_2_0 === 210 ? 6 : tmp_2_0 === 240 ? 7 : 8);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 14);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Save \");\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onPartialSave());\n    });\n    i0.ɵɵtext(1, \" Partial Save \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.saving());\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onMediaReady());\n    });\n    i0.ɵɵtext(1, \" Media Ready \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.saving());\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵconditionalCreate(1, TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_1_Template, 1, 0, \"mat-spinner\", 14)(2, TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_2_Template, 1, 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵconditionalCreate(3, TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_3_Template, 2, 1, \"button\", 15);\n    i0.ɵɵconditionalCreate(4, TestResultEntryComponent_Conditional_2_Conditional_22_Conditional_4_Template, 2, 1, \"button\", 15);\n    i0.ɵɵelementStart(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TestResultEntryComponent_Conditional_2_Conditional_22_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClear());\n    });\n    i0.ɵɵtext(6, \" Clear \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.entryForm.valid || ctx_r1.saving());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.saving() ? 1 : 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r1.canPartialSave() ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.canMediaReady() ? 4 : -1);\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Conditional_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TestResultEntryComponent_Conditional_2_Conditional_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onAccept());\n    });\n    i0.ɵɵtext(1, \" Accept \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function TestResultEntryComponent_Conditional_2_Conditional_23_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onReject());\n    });\n    i0.ɵɵtext(3, \" Reject \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.saving());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.saving());\n  }\n}\nfunction TestResultEntryComponent_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"div\", 2)(8, \"div\")(9, \"strong\");\n    i0.ɵɵtext(10, \"Lube Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\")(13, \"strong\");\n    i0.ɵɵtext(14, \"Quality Class:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵconditionalCreate(16, TestResultEntryComponent_Conditional_2_Conditional_16_Template, 2, 5, \"div\", 3);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"mat-card\", 4)(18, \"mat-card-content\")(19, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function TestResultEntryComponent_Conditional_2_Template_form_ngSubmit_19_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵconditionalCreate(20, TestResultEntryComponent_Conditional_2_Conditional_20_Template, 9, 1);\n    i0.ɵɵelementStart(21, \"div\", 6);\n    i0.ɵɵconditionalCreate(22, TestResultEntryComponent_Conditional_2_Conditional_22_Template, 7, 4);\n    i0.ɵɵconditionalCreate(23, TestResultEntryComponent_Conditional_2_Conditional_23_Template, 4, 2);\n    i0.ɵɵelementStart(24, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function TestResultEntryComponent_Conditional_2_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onCancel());\n    });\n    i0.ɵɵtext(25, \" Cancel \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    let tmp_7_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(((tmp_1_0 = ctx_r1.testInfo()) == null ? null : tmp_1_0.name) || \"Test Entry\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate6(\" Sample #\", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.id, \" | \", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.tagNumber, \" | \", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.componentName, \" (\", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.component, \") | \", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.locationName, \" (\", (tmp_2_0 = ctx_r1.sampleInfo()) == null ? null : tmp_2_0.location, \") \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_3_0 = ctx_r1.sampleInfo()) == null ? null : tmp_3_0.lubeType);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_4_0 = ctx_r1.sampleInfo()) == null ? null : tmp_4_0.qualityClass);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_5_0 = ctx_r1.sampleInfo()) == null ? null : tmp_5_0.cnrText) ? 16 : -1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.entryForm);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(((tmp_7_0 = ctx_r1.testInfo()) == null ? null : tmp_7_0.id) ? 20 : -1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r1.canEnter() ? 22 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.canReview() ? 23 : -1);\n  }\n}\nexport let TestResultEntryComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class TestResultEntryComponent {\n    constructor() {\n      this.mode = 'entry';\n      this.fb = inject(FormBuilder);\n      this.testResultService = inject(TestResultService);\n      this.snackBar = inject(MatSnackBar);\n      this.destroy$ = new Subject();\n      // Signals for reactive state\n      this.loading = signal(true, ...(ngDevMode ? [{\n        debugName: \"loading\"\n      }] : []));\n      this.saving = signal(false, ...(ngDevMode ? [{\n        debugName: \"saving\"\n      }] : []));\n      this.sampleInfo = signal(null, ...(ngDevMode ? [{\n        debugName: \"sampleInfo\"\n      }] : []));\n      this.testInfo = signal(null, ...(ngDevMode ? [{\n        debugName: \"testInfo\"\n      }] : []));\n      this.userQualification = signal(null, ...(ngDevMode ? [{\n        debugName: \"userQualification\"\n      }] : []));\n      this.equipment = signal([], ...(ngDevMode ? [{\n        debugName: \"equipment\"\n      }] : []));\n      this.particleTypes = signal([], ...(ngDevMode ? [{\n        debugName: \"particleTypes\"\n      }] : []));\n      // Computed properties\n      this.canEnter = computed(() => {\n        const qual = this.userQualification();\n        return qual?.canEnter && this.mode === 'entry';\n      }, ...(ngDevMode ? [{\n        debugName: \"canEnter\"\n      }] : []));\n      this.canReview = computed(() => {\n        const qual = this.userQualification();\n        return qual?.canReview && this.mode === 'review';\n      }, ...(ngDevMode ? [{\n        debugName: \"canReview\"\n      }] : []));\n      this.canPartialSave = computed(() => {\n        const qual = this.userQualification();\n        const test = this.testInfo();\n        return qual?.canEnter && test && [120, 180, 210, 240].includes(test.id);\n      }, ...(ngDevMode ? [{\n        debugName: \"canPartialSave\"\n      }] : []));\n      this.canMediaReady = computed(() => {\n        const qual = this.userQualification();\n        const test = this.testInfo();\n        return qual?.canEnter && test && [120, 180, 210, 240].includes(test.id);\n      }, ...(ngDevMode ? [{\n        debugName: \"canMediaReady\"\n      }] : []));\n    }\n    ngOnInit() {\n      this.initializeForm();\n      this.loadData();\n    }\n    ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    initializeForm() {\n      this.entryForm = this.fb.group({\n        entries: this.fb.array([]),\n        isPartialSave: [false],\n        isMediaReady: [false],\n        isDelete: [false]\n      });\n    }\n    loadData() {\n      this.loading.set(true);\n      combineLatest([this.testResultService.getSampleInfo(this.sampleId), this.testResultService.getTestInfo(this.testId), this.testResultService.getUserQualification('TEST001', this.testId), this.testResultService.getTestResults(this.sampleId, this.testId)]).pipe(takeUntil(this.destroy$)).subscribe({\n        next: ([sampleInfo, testInfo, qualification, results]) => {\n          this.sampleInfo.set(sampleInfo);\n          this.testInfo.set(testInfo);\n          this.userQualification.set(qualification);\n          this.initializeFormEntries(results);\n          this.loadEquipment();\n          if ([120, 180, 210, 240].includes(testInfo.id)) {\n            this.loadParticleTypes();\n          }\n          this.loading.set(false);\n        },\n        error: error => {\n          console.error('Error loading data:', error);\n          this.snackBar.open('Error loading test data', 'Close', {\n            duration: 3000\n          });\n          this.loading.set(false);\n        }\n      });\n    }\n    initializeFormEntries(results) {\n      const entriesArray = this.entryForm.get('entries');\n      entriesArray.clear();\n      if (results.length === 0) {\n        // Add default entry\n        entriesArray.push(this.createEntryFormGroup());\n      } else {\n        results.forEach(result => {\n          entriesArray.push(this.createEntryFormGroup(result));\n        });\n      }\n    }\n    createEntryFormGroup(data) {\n      return this.fb.group({\n        sampleId: [this.sampleId],\n        testId: [this.testId],\n        trialNumber: [data?.trialNumber || 1],\n        value1: [data?.value1],\n        value2: [data?.value2],\n        value3: [data?.value3],\n        trialCalc: [data?.trialCalc],\n        id1: [data?.id1],\n        id2: [data?.id2],\n        id3: [data?.id3],\n        status: [data?.status],\n        mainComments: [data?.mainComments],\n        isSelected: [true]\n      });\n    }\n    loadEquipment() {\n      const test = this.testInfo();\n      if (!test) return;\n      // Load equipment based on test type\n      const equipmentTypes = this.getEquipmentTypesForTest(test.id);\n      equipmentTypes.forEach(type => {\n        this.testResultService.getEquipment(type, test.id).pipe(takeUntil(this.destroy$)).subscribe(equipment => {\n          this.equipment.update(current => [...current, ...equipment]);\n        });\n      });\n    }\n    loadParticleTypes() {\n      this.testResultService.getParticleTypes(this.sampleId, this.testId).pipe(takeUntil(this.destroy$)).subscribe(particleTypes => {\n        this.particleTypes.set(particleTypes);\n      });\n    }\n    getEquipmentTypesForTest(testId) {\n      switch (testId) {\n        case 10:\n          return ['THERMOMETER'];\n        case 50:\n        case 60:\n          return ['THERMOMETER', 'TIMER', 'VISCOMETER'];\n        case 80:\n          return ['BAROMETER', 'THERMOMETER'];\n        case 130:\n          return [];\n        case 140:\n          return ['THERMOMETER'];\n        case 170:\n        case 230:\n          return ['THERMOMETER'];\n        case 220:\n          return ['THERMOMETER'];\n        case 250:\n          return ['DELETERIOUS'];\n        default:\n          return [];\n      }\n    }\n    onSubmit() {\n      if (this.entryForm.valid) {\n        this.saveResults('entry');\n      }\n    }\n    onPartialSave() {\n      this.entryForm.patchValue({\n        isPartialSave: true\n      });\n      this.saveResults('entry');\n    }\n    onMediaReady() {\n      this.entryForm.patchValue({\n        isMediaReady: true\n      });\n      this.saveResults('entry');\n    }\n    onAccept() {\n      this.saveResults('reviewaccept');\n    }\n    onReject() {\n      this.saveResults('reviewreject');\n    }\n    onClear() {\n      this.entryForm.reset();\n      this.initializeFormEntries([]);\n    }\n    onCancel() {\n      // Navigate back or close\n      window.history.back();\n    }\n    saveResults(mode) {\n      this.saving.set(true);\n      const formValue = this.entryForm.value;\n      const saveData = {\n        sampleId: this.sampleId,\n        testId: this.testId,\n        mode: mode,\n        entries: formValue.entries.filter(entry => entry.isSelected),\n        isPartialSave: formValue.isPartialSave,\n        isMediaReady: formValue.isMediaReady,\n        isDelete: formValue.isDelete\n      };\n      this.testResultService.saveTestResults(saveData).pipe(takeUntil(this.destroy$)).subscribe({\n        next: response => {\n          this.saving.set(false);\n          if (response.success) {\n            this.snackBar.open('Results saved successfully', 'Close', {\n              duration: 3000\n            });\n            this.loadData(); // Reload to get updated data\n          } else {\n            this.snackBar.open(response.errorMessage || 'Error saving results', 'Close', {\n              duration: 5000\n            });\n          }\n        },\n        error: error => {\n          this.saving.set(false);\n          console.error('Error saving results:', error);\n          this.snackBar.open('Error saving results', 'Close', {\n            duration: 3000\n          });\n        }\n      });\n    }\n    static #_ = _staticBlock = () => (this.ɵfac = function TestResultEntryComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TestResultEntryComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TestResultEntryComponent,\n      selectors: [[\"app-test-result-entry\"]],\n      inputs: {\n        sampleId: \"sampleId\",\n        testId: \"testId\",\n        mode: \"mode\"\n      },\n      decls: 3,\n      vars: 1,\n      consts: [[1, \"test-result-entry\"], [1, \"sample-info-card\"], [1, \"sample-details\"], [1, \"cnr-info\", 3, \"background-color\", \"color\"], [1, \"entry-form-card\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"action-buttons\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\"], [1, \"cnr-info\"], [3, \"formGroup\", \"equipment\"], [3, \"formGroup\", \"equipment\", \"lubeType\"], [3, \"formGroup\"], [3, \"formGroup\", \"particleTypes\", \"testId\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"diameter\", \"20\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"disabled\"], [\"mat-button\", \"\", \"type\", \"button\", 3, \"click\", \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 3, \"click\", \"disabled\"], [\"mat-button\", \"\", \"color\", \"warn\", \"type\", \"button\", 3, \"click\", \"disabled\"]],\n      template: function TestResultEntryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵconditionalCreate(1, TestResultEntryComponent_Conditional_1_Template, 1, 0, \"mat-spinner\")(2, TestResultEntryComponent_Conditional_2_Template, 26, 14);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx.loading() ? 1 : 2);\n        }\n      },\n      dependencies: [CommonModule, FormsModule, i1.ɵNgNoValidate, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, MatCardModule, i2.MatCard, i2.MatCardContent, i2.MatCardHeader, i2.MatCardSubtitle, i2.MatCardTitle, MatButtonModule, i3.MatButton, MatFormFieldModule, MatInputModule, MatSelectModule, MatCheckboxModule, MatRadioModule, MatIconModule, MatProgressSpinnerModule, i4.MatProgressSpinner, MatSnackBarModule],\n      styles: [\".test-result-entry[_ngcontent-%COMP%]{max-width:1200px;margin:0 auto;padding:20px}.sample-info-card[_ngcontent-%COMP%], .entry-form-card[_ngcontent-%COMP%]{margin-bottom:20px}.sample-details[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:10px}.cnr-info[_ngcontent-%COMP%]{padding:8px;border-radius:4px;font-weight:700}.action-buttons[_ngcontent-%COMP%]{display:flex;gap:10px;margin-top:20px;flex-wrap:wrap}.action-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{min-width:120px}\"]\n    }));\n  }\n  _staticBlock();\n  return TestResultEntryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}